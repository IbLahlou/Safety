name: Simple PPE Test

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    timeout-minutes: 10
    
    steps:
    - name: Pre-cleanup
      run: |
        echo "Killing any existing processes..."
        pkill -f "flaskr.main" || true
        pkill -f "PPE_Detection" || true
        lsof -ti:5000 | xargs kill -9 2>/dev/null || true
        sleep 5
        
    - name: Check YOLO Model
      run: |
        cd /home/sysadmin01/Desktop/PFE/safety
        WEIGHTS="/home/sysadmin01/Desktop/PFE/safety/PPE_Detection/experiments/checkpoints/yolo11n_v6.pt"
        if [ -f "$WEIGHTS" ]; then
          echo "Weights file found"
          ls -lh "$WEIGHTS"
        else
          echo "Weights file not found"
          find . -name "*.pt" -type f | head -5
        fi
        
    - name: Start PPE App
      run: |
        cd /home/sysadmin01/Desktop/PFE/safety
        source .venv/bin/activate
        export TORCH_SERIALIZATION_UNSAFE_GLOBAL_DISABLE=False
        nohup uv run python -m PPE_Detection.alarm_system.flaskr.main --weights "/home/sysadmin01/Desktop/PFE/safety/PPE_Detection/experiments/checkpoints/yolo11n_v6.pt" > /tmp/ppe.log 2>&1 &
        echo $! > /tmp/ppe.pid
        echo "Started with PID: $(cat /tmp/ppe.pid)"
        sleep 30
        
    - name: Check Status
      run: |
        if [ -f /tmp/ppe.pid ]; then
          PID=$(cat /tmp/ppe.pid)
          if kill -0 $PID 2>/dev/null; then
            echo "App is running!"
            ps -p $PID
            echo "Last 10 lines of log:"
            tail -10 /tmp/ppe.log
          else
            echo "App failed to start"
            echo "Error log:"
            cat /tmp/ppe.log
          fi
        fi
        
    - name: Cleanup
      if: always()
      run: |
        if [ -f /tmp/ppe.pid ]; then
          PID=$(cat /tmp/ppe.pid)
          kill $PID 2>/dev/null || true
          sleep 2
          kill -9 $PID 2>/dev/null || true
        fi
        pkill -f "flaskr.main" || true
        rm -f /tmp/ppe.pid /tmp/ppe.log
